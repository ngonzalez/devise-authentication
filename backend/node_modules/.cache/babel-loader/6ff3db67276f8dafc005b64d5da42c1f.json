{"ast":null,"code":"// Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails\nimport \"@hotwired/turbo-rails\";\nimport \"controllers\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client/core';\nimport { createApolloProvider } from \"@vue/apollo-option\";\nimport VueApolloComponents from '@vue/apollo-components'; // HTTP connection to the API\n\nvar httpLink = createHttpLink({\n  // You should use an absolute URL here\n  uri: 'http://localhost:3000/graphiql'\n}); // Cache implementation\n\nvar cache = new InMemoryCache(); // Create the apollo client\n\nvar apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: cache\n}); // The provider holds the Apollo client instances that can then be used by all the child components.\n\nvar apolloProvider = createApolloProvider({\n  defaultClient: apolloClient\n});\nimport { createApp, h } from 'vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport App from './App.vue';\nimport routes from './router/index'; // 3. Create the router instance and pass the `routes` option\n// You can pass in additional options here, but let's\n// keep it simple for now.\n\nvar router = createRouter({\n  // 4. Provide the history implementation to use. We are using the hash history for simplicity here.\n  history: createWebHistory(),\n  routes: routes // short for `routes: routes`\n\n});\nvar app = createApp({\n  render: function render() {\n    return h(App);\n  }\n});\napp.use(router);\napp.use(apolloProvider);\napp.use(VueApolloComponents);\ndocument.addEventListener('DOMContentLoaded', function () {\n  document.writeln('test'); // app.mount(\"#app\")\n});","map":{"version":3,"sources":["/Users/ngonzalez/Dev/cheerz-demo-app/backend/app/javascript/application.js"],"names":["ApolloClient","createHttpLink","InMemoryCache","createApolloProvider","VueApolloComponents","httpLink","uri","cache","apolloClient","link","apolloProvider","defaultClient","createApp","h","createRouter","createWebHistory","App","routes","router","history","app","render","use","document","addEventListener","writeln"],"mappings":"AAAA;AACA,OAAO,uBAAP;AACA,OAAO,aAAP;AAEA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,qBAA5D;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC,C,CAEA;;AACA,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC9B;AACAK,EAAAA,GAAG,EAAE;AAFyB,CAAD,CAA/B,C,CAKA;;AACA,IAAMC,KAAK,GAAG,IAAIL,aAAJ,EAAd,C,CAEA;;AACA,IAAMM,YAAY,GAAG,IAAIR,YAAJ,CAAiB;AACpCS,EAAAA,IAAI,EAAEJ,QAD8B;AAEpCE,EAAAA,KAAK,EAALA;AAFoC,CAAjB,CAArB,C,CAKA;;AACA,IAAMG,cAAc,GAAGP,oBAAoB,CAAC;AAC1CQ,EAAAA,aAAa,EAAEH;AAD2B,CAAD,CAA3C;AAIA,SAASI,SAAT,EAAoBC,CAApB,QAA6B,KAA7B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CAEA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGJ,YAAY,CAAC;AAC1B;AACAK,EAAAA,OAAO,EAAEJ,gBAAgB,EAFC;AAG1BE,EAAAA,MAAM,EAANA,MAH0B,CAGlB;;AAHkB,CAAD,CAA3B;AAMA,IAAMG,GAAG,GAAGR,SAAS,CAAC;AACpBS,EAAAA,MAAM,EAAE;AAAA,WAAMR,CAAC,CAACG,GAAD,CAAP;AAAA;AADY,CAAD,CAArB;AAIAI,GAAG,CAACE,GAAJ,CAAQJ,MAAR;AACAE,GAAG,CAACE,GAAJ,CAAQZ,cAAR;AACAU,GAAG,CAACE,GAAJ,CAAQlB,mBAAR;AAEAmB,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDD,EAAAA,QAAQ,CAACE,OAAT,CAAiB,MAAjB,EADkD,CAElD;AACD,CAHD","sourcesContent":["// Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails\nimport \"@hotwired/turbo-rails\"\nimport \"controllers\"\n\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client/core'\nimport { createApolloProvider } from \"@vue/apollo-option\"\nimport VueApolloComponents from '@vue/apollo-components'\n\n// HTTP connection to the API\nconst httpLink = createHttpLink({\n  // You should use an absolute URL here\n  uri: 'http://localhost:3000/graphiql',\n})\n\n// Cache implementation\nconst cache = new InMemoryCache()\n\n// Create the apollo client\nconst apolloClient = new ApolloClient({\n  link: httpLink,\n  cache,\n})\n\n// The provider holds the Apollo client instances that can then be used by all the child components.\nconst apolloProvider = createApolloProvider({\n  defaultClient: apolloClient,\n})\n\nimport { createApp, h } from 'vue'\nimport { createRouter, createWebHistory } from 'vue-router'\nimport App from './App.vue'\nimport routes from './router/index'\n\n// 3. Create the router instance and pass the `routes` option\n// You can pass in additional options here, but let's\n// keep it simple for now.\nconst router = createRouter({\n  // 4. Provide the history implementation to use. We are using the hash history for simplicity here.\n  history: createWebHistory(),\n  routes, // short for `routes: routes`\n})\n\nconst app = createApp({\n  render: () => h(App),\n})\n\napp.use(router)\napp.use(apolloProvider)\napp.use(VueApolloComponents)\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.writeln('test')\n  // app.mount(\"#app\")\n})\n"]},"metadata":{},"sourceType":"module"}