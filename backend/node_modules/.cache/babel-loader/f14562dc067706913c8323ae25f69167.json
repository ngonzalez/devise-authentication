{"ast":null,"code":"// Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails\n// import \"@hotwired/turbo-rails\"\n// import \"controllers\"\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client/core'; // import { createApolloProvider } from \"@vue/apollo-option\"\n// import VueApolloComponents from '@vue/apollo-components'\n//\n// // HTTP connection to the API\n// const httpLink = createHttpLink({\n//   // You should use an absolute URL here\n//   uri: 'http://localhost:3000/graphiql',\n// })\n//\n// // Cache implementation\n// const cache = new InMemoryCache()\n//\n// // Create the apollo client\n// const apolloClient = new ApolloClient({\n//   link: httpLink,\n//   cache,\n// })\n//\n// // The provider holds the Apollo client instances that can then be used by all the child components.\n// const apolloProvider = createApolloProvider({\n//   defaultClient: apolloClient,\n// })\n//\n// import { createApp, h } from 'vue'\n// import { createRouter, createWebHistory } from 'vue-router'\n// import App from './App.vue'\n// import routes from './router/index'\n//\n// // 3. Create the router instance and pass the `routes` option\n// // You can pass in additional options here, but let's\n// // keep it simple for now.\n// const router = createRouter({\n//   // 4. Provide the history implementation to use. We are using the hash history for simplicity here.\n//   history: createWebHistory(),\n//   routes, // short for `routes: routes`\n// })\n//\n// const app = createApp({\n//   render: () => h(App),\n// })\n//\n// app.use(router)\n// app.use(apolloProvider)\n// app.use(VueApolloComponents)\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   document.writeln('test')\n//   // app.mount(\"#app\")\n// })","map":{"version":3,"sources":["/Users/ngonzalez/Dev/cheerz-demo-app/backend/app/javascript/application.js"],"names":["ApolloClient","createHttpLink","InMemoryCache"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,qBAA5D,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails\n// import \"@hotwired/turbo-rails\"\n// import \"controllers\"\n\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client/core'\n// import { createApolloProvider } from \"@vue/apollo-option\"\n// import VueApolloComponents from '@vue/apollo-components'\n//\n// // HTTP connection to the API\n// const httpLink = createHttpLink({\n//   // You should use an absolute URL here\n//   uri: 'http://localhost:3000/graphiql',\n// })\n//\n// // Cache implementation\n// const cache = new InMemoryCache()\n//\n// // Create the apollo client\n// const apolloClient = new ApolloClient({\n//   link: httpLink,\n//   cache,\n// })\n//\n// // The provider holds the Apollo client instances that can then be used by all the child components.\n// const apolloProvider = createApolloProvider({\n//   defaultClient: apolloClient,\n// })\n//\n// import { createApp, h } from 'vue'\n// import { createRouter, createWebHistory } from 'vue-router'\n// import App from './App.vue'\n// import routes from './router/index'\n//\n// // 3. Create the router instance and pass the `routes` option\n// // You can pass in additional options here, but let's\n// // keep it simple for now.\n// const router = createRouter({\n//   // 4. Provide the history implementation to use. We are using the hash history for simplicity here.\n//   history: createWebHistory(),\n//   routes, // short for `routes: routes`\n// })\n//\n// const app = createApp({\n//   render: () => h(App),\n// })\n//\n// app.use(router)\n// app.use(apolloProvider)\n// app.use(VueApolloComponents)\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   document.writeln('test')\n//   // app.mount(\"#app\")\n// })\n"]},"metadata":{},"sourceType":"module"}